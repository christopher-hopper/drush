version: '1.0.{build}-{branch}'
branches:
  only:
  - appveyor
  - feature/appveyor
build: false
platform: 'x86'
shallow_clone: true
init:
- ps: Update-AppveyorBuild -Version "1.0.$env:APPVEYOR_BUILD_NUMBER-$env:APPVEYOR_REPO_BRANCH-$($env:APPVEYOR_REPO_COMMIT.substring(0,7))"
environment:
  UNISH_NO_TIMEOUTS: y
  UNISH_DB_URL: "mysql://root:Password12!@localhost"
  UNISH_TMP: c:\drush_temp
  matrix:
  - UNISH_DRUPAL_MAJOR_VERSION: 7
    PHPUNIT_ARGS: --group=make
  - UNISH_DRUPAL_MAJOR_VERSION: 7
    PHPUNIT_ARGS: --group=base
  - UNISH_DRUPAL_MAJOR_VERSION: 7
    PHPUNIT_ARGS: --group=commands
  - UNISH_DRUPAL_MAJOR_VERSION: 7
    PHPUNIT_ARGS: --group=pm
  - UNISH_DRUPAL_MAJOR_VERSION: 7
    PHPUNIT_ARGS: --group=quick-drupal
  - UNISH_DRUPAL_MAJOR_VERSION: 7
    PHPUNIT_ARGS: --exclude-group=make,base,commands,pm,quick-drupal

  - UNISH_DRUPAL_MAJOR_VERSION: 8
    PHPUNIT_ARGS: --group=make
  - UNISH_DRUPAL_MAJOR_VERSION: 8
    PHPUNIT_ARGS: --group=base
  - UNISH_DRUPAL_MAJOR_VERSION: 8
    PHPUNIT_ARGS: --group=commands
  - UNISH_DRUPAL_MAJOR_VERSION: 8
    PHPUNIT_ARGS: --group=pm
  - UNISH_DRUPAL_MAJOR_VERSION: 8
    PHPUNIT_ARGS: --group=quick-drupal
  - UNISH_DRUPAL_MAJOR_VERSION: 8
    PHPUNIT_ARGS: --exclude-group=make,base,commands,pm,quick-drupal
    TEST_CHILDREN: "drush-ops/config-extra"

services: mysql
cache: 'C:\drush_temp'
# Inspired by
# - https://github.com/Codeception/base/blob/master/appveyor.yml
# - https://github.com/phpmd/phpmd/blob/master/appveyor.yml
install:
- cmd: SET PATH=C:\Program Files\MySql\MySQL Server 5.6\bin\;%PATH%

# Chocolatey: cURL
- cmd: |
    cinst -y curl
    SET PATH=C:\Program Files\curl;%PATH%

# Chocolatey: which
- cmd: |
    cinst -y which
    SET PATH=C:\Program Files\which;%PATH%

# Github: acquia/DevDesktopCommon (GNU Utils)
- cmd: |
    git clone -q https://github.com/acquia/DevDesktopCommon.git
    SET PATH=%APPVEYOR_BUILD_FOLDER%/DevDesktopCommon/bintools-win/msys/bin;%PATH%

# Chocolatey: PHP 5.6
- cmd: |
    cinst -y php -version 5.6.17
    SET PATH=C:\tools\php;%PATH%
    cd c:\tools\php
    copy php.ini-production php.ini
    echo date.timezone="UTC" >> php.ini
    echo extension_dir=ext >> php.ini
    echo extension=php_openssl.dll >> php.ini
    echo variables_order="EGPCS" >> php.ini
    echo extension=php_mbstring.dll >> php.ini
    echo extension=php_curl.dll >> php.ini
    echo extension=php_pdo_mysql.dll >> php.ini
    echo extension=php_pdo_pgsql.dll >> php.ini
    echo extension=php_pdo_sqlite.dll >> php.ini
    echo extension=php_pgsql.dll >> php.ini
    echo extension=php_gd2.dll >> php.ini

# Install Composer
- cmd: cd %APPVEYOR_BUILD_FOLDER%
- cmd: |
    php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
    php -r "if (hash_file('SHA384', 'composer-setup.php') === trim(file_get_contents('https://composer.github.io/installer.sig'))) { echo 'Composer installer verified' . PHP_EOL; } else { unlink('composer-setup.php'); die('Composer installer corrupt' . PHP_EOL); }"
    php composer-setup.php
    php -r "unlink('composer-setup.php');"

# Install Drush via Composer
- cmd: |
    php composer.phar --quiet --no-interaction install --prefer-dist
    SET PATH=%APPVEYOR_BUILD_FOLDER%;%APPVEYOR_BUILD_FOLDER%/vendor/bin;%PATH%

# Create a sandbox for testing.
- cmd: mkdir c:\drush_temp

test_script:
- cmd: |
    mysql -uroot -pPassword12! -hlocalhost -e "CREATE DATABASE YourDatabase;"
    php -r "$a = new PDO('mysql:YourDatabase;host=localhost', 'root', 'Password12!'); foreach($a->query('SHOW DATABASES;') as $row) print_r($row);"
    phpunit -v --filter testDisabledModule --configuration tests %PHPUNIT_ARGS%
